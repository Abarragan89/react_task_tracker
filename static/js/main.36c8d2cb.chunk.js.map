{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placehodler","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","toggleReminder","taskToToggle","updatedTask","method","headers","body","JSON","stringify","addTask","deleteTask","filter","path","element","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36c8d2cb.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst Button = ({ color, text, onClick  }) => {\n\n    return <button onClick={onClick} style ={{ backgroundColor: color }}\n            className='btn'>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\n\n\nexport default Button","// props is just an object of whatever we pass in. \nimport PropTypes from 'prop-types'\nimport Button from './Button'\nimport { useLocation } from 'react-router-dom'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation()\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {/* the button as parameter in button.js and you set them here */}\n            {location.pathname === '/' &&\n            <Button color={showAdd ? 'red' : 'green'}\n                text={showAdd ? 'Close' : 'Add'} \n                onClick= {onAdd} />}\n        </header>\n    )\n}\nHeader.defaultProps = {\n    title: 'Testing tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n} \n\n// CSS in JS\n// const headingStyle = {\n//     color: 'red', \n//     backgroundColor: 'blue'\n// }\n\nexport default Header\n\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        //You can make conditionals for classes!\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} \n        onDoubleClick={() =>\n        onToggle(task.id)}>\n            <h3>\n                {task.text} {' '}\n                <FaTimes \n                    style={{color: 'red',cursor: \n                    'pointer'}}\n                    onClick={() => onDelete(task.id)}\n                />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task","import Task from './Task'\n\n//The onDelete function just get's passes as a  prop to get passed as a prop to task\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        //returns an array of each item after they went \n        //through the function\n        <>\n        {tasks.map((task) => (\n            //each needs to have a uniqe identifier. \n        <Task\n            key={task.id}\n            task={task} \n            onDelete={onDelete} \n            onToggle={onToggle}\n        />\n        ))}\n        </>\n    )\n}\n\nexport default Tasks ","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task')\n            return;\n        }\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit} >\n            \n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placehodler='Add Task' \n                //e.target.value is whatever is typed in. onChange is when you type\n                value={text} onChange={(e) => setText(e.target.value) } />\n            </div>\n\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placehodler='Add Day & time'\n                value={day} onChange={(e) => setDay(e.target.value) } />\n            </div>\n\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' checked={reminder}\n                //e.currentTarget.checked will return a true or false value\n                value={reminder} onChange={(e) => setReminder(e.currentTarget.checked) } />\n            </div>\n\n            <input type=\"submit\" value=\"Save Task\" className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to='/about'>About</Link>\n        </footer>\n    )\n}\n\nexport default Footer","import { Link } from 'react-router-dom'\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n        </div>\n    )\n}\n\nexport default About","import { useState, useEffect } from 'react'\nimport { Routes, BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  //setTasks is the hook\n  //It rerenders the state\n  //similar to this.statetasks && this.setState()\n  //this is destructing. it is an array\n  //it returns currentState and an function to update it.\n  //the argument of useState is the \n  const [showAddTask, setShowAddTask] = useState(false)\n  const[tasks, setTasks] = useState ([])\n\n  useEffect(() => { \n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n\n  }, [])\n\n    //Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  //Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:3000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n\n//Toggle Reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updatedTask = {...taskToToggle, \n  reminder: !taskToToggle.reminder}\n\n  const res = await fetch(`http://localhost:3000/tasks/${id}`, \n  { method: 'PUT', \n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(updatedTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(tasks.map((task) => task.id === id\n  ? {...task, reminder: data.reminder} :\n  task)\n  )\n}\n\n//Add Task\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:3000/tasks', \n    { method: 'POST', \n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)})\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n  // const id = Math.floor(Math.random() * 10000) + 1\n  // const newTask = { id, ...task }\n  // setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = async (id) => {\n  //deletes from the server. No variable because we are \n  //only deleting data and not storing it. \n  await fetch\n    (`http://localhost:3000/tasks/${id}`, \n    { method: 'DELETE' })\n  //setTasks updates the current state of tasks\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n\n\n  return (\n    <Router>\n      \n        {/* Looks like html, but it is really JSX */}\n        <div className=\"container\">\n        {/* Hello is a prop */}\n        <Header onAdd={() => setShowAddTask(!showAddTask)} \n        showAdd={showAddTask} />\n        <Routes>\n        <Route path='/' element={\n          <>\n          {showAddTask && <AddTask onAdd={addTask}  />}\n          { /* this is the function getting called with arguments */}\n          {tasks.length > 0 ?  \n            (<Tasks \n              tasks={tasks} \n              onDelete={deleteTask} \n              onToggle={toggleReminder}/>\n              ) : (\n                'No tasks to show') \n            }\n          </>\n        }\n        />\n        <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />  \n        \n      </div>\n    \n    </Router>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//Asserting app into 'root' div. The two parameters in render\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}